[package]
name = "teamy-mft"
version = "0.3.0"
edition = "2024"
authors = ["TeamDman"]
description = "TeamDman's MFT CLI and tooling"
license = "MPL-2.0"
readme = "README.md"

[dependencies]
arbitrary = { version = "1.4.1", features = ["derive"] }
clap = { version = "4", features = ["derive"] }
color-eyre = "0.6"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
bytes = "1.10.1"
directories = "5"
dunce = "1"
eyre = "0.6.12"
tracing = "0.1.41"
tracing-subscriber = "0.3.19"
widestring = "1.2.0"
windows = { version = "0.62.0", features = [
    "Win32_System_Registry",
    "Win32_Foundation",
    "Win32_Security",
    "Win32_Storage_FileSystem",
    "Win32_Storage",
    "Win32_System_IO",
    "Win32_System_Ioctl",
    "Win32_System_SystemServices",
    "Win32_System_Threading",
    "Win32_UI_Shell",
    "Win32_UI_WindowsAndMessaging",
    "Win32_UI",
    "Win32_System_Console",
] }
tokio = { version = "1.47.1", features = ["full"] }
strum = { version = "0.27.2", features = ["derive"] }
itertools = "0.14.0"
humansize = "2.1.3"
crossbeam-channel = "0.5"
mft = { version = "0.6.1", git = "https://github.com/TeamDman/mft", branch = "teamy-mft" }
rustc-hash = "2.1.1"
winstructs = "0.3.2"
uom = { version = "0.37.0", features = [
    "autoconvert",
    "human",
    "usize",
], git = "https://github.com/TeamDman/uom", branch = "mine" }
rayon = { version = "1.10" }
humantime = "2.2.0"
thousands = "0.2.0"
nucleo = "0.5.0"
chrono = "0.4.41"
compact_str = { version = "0.9.0", git = "https://github.com/TeamDman/compact_str", features = [
    "bevy-reflect",
], rev = "7e4f92aa131a62ffabe468f748309e06c932b616" }
teamy-windows = "0.2.0"
bevy = { version = "0.18.0-dev", git = "https://github.com/TeamDman/bevy.git", branch = "teamy-mft", features = [
    "custom_window_icon",
    "bevy_dev_tools",
] }
bevy-inspector-egui = { git = "https://github.com/TeamDman/bevy-inspector-egui.git", branch = "teamy-mft" }
tempfile = "3.20"

[build-dependencies]
embed-resource = "3.0.3"

[dev-dependencies]
tempfile = "3.20"

[profile.release]
codegen-units = 1
lto = true
opt-level = "z"
strip = true

[patch."https://github.com/TeamDman/bevy"]
# we are also patching bevy_* crates used by bevy_egui that aren't explicitly used here
bevy = { path = "D:/Repos/games/bevy" }
bevy_app = { path = "D:/Repos/games/bevy/crates/bevy_app" }
bevy_asset = { path = "D:/Repos/games/bevy/crates/bevy_asset" }
bevy_color = { path = "D:/Repos/games/bevy/crates/bevy_color" }
bevy_platform = { path = "D:/Repos/games/bevy/crates/bevy_platform" }
bevy_ecs = { path = "D:/Repos/games/bevy/crates/bevy_ecs" }
bevy_log = { path = "D:/Repos/games/bevy/crates/bevy_log" }
bevy_camera = { path = "D:/Repos/games/bevy/crates/bevy_camera" }
bevy_math = { path = "D:/Repos/games/bevy/crates/bevy_math" }
bevy_mesh = { path = "D:/Repos/games/bevy/crates/bevy_mesh" }
bevy_light = { path = "D:/Repos/games/bevy/crates/bevy_light" }
bevy_reflect = { path = "D:/Repos/games/bevy/crates/bevy_reflect" }
bevy_state = { path = "D:/Repos/games/bevy/crates/bevy_state" }
bevy_time = { path = "D:/Repos/games/bevy/crates/bevy_time" }
bevy_utils = { path = "D:/Repos/games/bevy/crates/bevy_utils" }
bevy_window = { path = "D:/Repos/games/bevy/crates/bevy_window" }
bevy_render = { path = "D:/Repos/games/bevy/crates/bevy_render" }
bevy_core_pipeline = { path = "D:/Repos/games/bevy/crates/bevy_core_pipeline" }
bevy_pbr = { path = "D:/Repos/games/bevy/crates/bevy_pbr" }
bevy_ptr = { path = "D:/Repos/games/bevy/crates/bevy_ptr" }
bevy_image = { path = "D:/Repos/games/bevy/crates/bevy_image" }
bevy_a11y = { path = "D:/Repos/games/bevy/crates/bevy_a11y" }
bevy_shader = { path = "D:/Repos/games/bevy/crates/bevy_shader" }
bevy_tasks = { path = "D:/Repos/games/bevy/crates/bevy_tasks" }
bevy_transform = { path = "D:/Repos/games/bevy/crates/bevy_transform" }
bevy_ui_render = { path = "D:/Repos/games/bevy/crates/bevy_ui_render" }
bevy_picking = { path = "D:/Repos/games/bevy/crates/bevy_picking" }
bevy_derive = { path = "D:/Repos/games/bevy/crates/bevy_derive" }
bevy_input = { path = "D:/Repos/games/bevy/crates/bevy_input" }
bevy_winit = { path = "D:/Repos/games/bevy/crates/bevy_winit" }

[patch."https://github.com/TeamDman/compact_str"]
compact_str = { path = "../compact_str/compact_str" }

[patch."https://github.com/TeamDman/mft"]
mft = { path = "D:/Repos/Rust/mft" }

[patch."https://github.com/TeamDman/uom"]
uom = { path = "../uom" }

[patch."https://github.com/TeamDman/bevy-inspector-egui"]
bevy-inspector-egui = { path = "D:/Repos/Games/bevy-inspector-egui/crates/bevy-inspector-egui" }

[patch."https://github.com/teamdman/bevy_egui"]
bevy_egui = { path = "D:/Repos/Games/bevy_egui" }

# [patch."https://github.com/TeamDman/egui_dock"]
# egui_dock = { path = "G:/Programming/Repos/egui_dock" }

# Enable max optimizations for dependencies, but not for our code:
[profile.dev.package."*"]
opt-level = 3
